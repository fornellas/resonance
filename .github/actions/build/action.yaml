name: 'Build'
description: 'Run build'
inputs:
  CODECOV_TOKEN:
    description: 'CODECOV_TOKEN'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
    # GOMODCACHE
    - name: Get GOMODCACHE path
      id: gomodcache
      run: |
        set -e
        echo "path=$(make GOMODCACHE)" >> $GITHUB_OUTPUT
      shell: bash
    - name: Fetch GOMODCACHE cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.gomodcache.outputs.path }}
        key: ${{ runner.os }}-gomodcache-${{ hashFiles('**/go.sum') }}
        restore-keys: ${{ runner.os }}-gomodcache-
    # GOCACHE
    - name: Get GOCACHE path
      id: gocache
      run: |
        set -e
        echo "path=$(make GOCACHE)" >> $GITHUB_OUTPUT
      shell: bash
    - name: Fetch GOCACHE cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.gocache.outputs.path }}
        key: ${{ runner.os }}-gocache-${{ hashFiles('**/go.sum', '**/*.go') }}
        restore-keys: ${{ runner.os }}-gocache-
    # staticcheck
    - name: Get staticcheck cache path
      id: staticcheck
      run: |
        set -e
        # https://github.com/dominikh/go-tools/blob/cc140e9b3719aadd3b628b7a7b00523681c8b34d/lintcmd/cache/default.go#L75
        if [ "$XDG_CACHE_HOME" != "" ] ; then
          echo "path=$XDG_CACHE_HOME/staticcheck" >> $GITHUB_OUTPUT
        else
          echo "path=$HOME/.cache/staticcheck" >> $GITHUB_OUTPUT
        fi
      shell: bash
    - name: Fetch staticcheck cache
      uses: actions/cache@v3
      with:
        path: |
          ${{ steps.staticcheck.outputs.path }}
        key: ${{ runner.os }}-staticcheck-${{ hashFiles('**/go.sum', '**/*.go') }}
        restore-keys: ${{ runner.os }}-staticcheck-
    # BINDIR
    - name: Get BINDIR path
      id: bindir
      run: |
        set -e
        echo "path=$(make BINDIR)" >> $GITHUB_OUTPUT
      shell: bash
    - name: Fetch BINDIR cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.bindir.outputs.path }}
        key: ${{ runner.os }}-bindir-${{ hashFiles('Makefile') }}
        restore-keys: ${{ runner.os }}-bindir-
    # Build
    - name: Build
      run: make ci
      shell: bash
    # Git Status
    - name: git status
      run: GIT_STATUS="$(git status --porcelain)" && [ -n "$GIT_STATUS" ] && { echo git status ; echo "$GIT_STATUS" ; echo git diff ; git diff ; exit 1 ; } || true
      shell: bash
    # codecov
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ inputs.CODECOV_TOKEN }}
        files: cover.out
        fail_ci_if_error: true