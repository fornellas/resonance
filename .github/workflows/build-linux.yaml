name: build-linux
on:
  workflow_call:
    inputs:
      upload-artifact:
        required: false
        type: boolean
        default: false
      GOARCH:
        required: true
        type: string
      runs-on:
        required: true
        type: string
      update-deps:
        required: false
        type: boolean
        default: false
      coveralls:
        required: false
        type: boolean
        default: true
    outputs:
      artifact:
        value: resonance.linux.${{ inputs.GOARCH }}.gz
jobs:
  build:
    runs-on: ${{ inputs.runs-on }}
    env:
      GOOS: linux
      GOARCH: ${{ inputs.GOARCH }}
      XDG_CACHE_HOME: /tmp/XDG_CACHE_HOME
      DOCKER_PLATFORM: linux/${{ inputs.GOARCH }}
      GO_TEST_BINARY_FLAGS_EXTRA: -v
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4
      # Cache restore
      - name: Cache restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.XDG_CACHE_HOME }}
          key: linux-${{ inputs.GOARCH }}-${{ hashFiles('**/go.sum', '**/*.go') }}
          restore-keys: linux-${{ inputs.GOARCH }}-
      # Install unzip
      - name: Install unzip
        run: sudo apt-get -y install unzip
      # Update Deps
      - name: Update Deps
        if: ${{ inputs.update-deps == true }}
        run: |
          ./make.sh update-deps
      # Update Deps
      - name: Diff
        if: ${{ inputs.update-deps == true }}
        run: |
          git diff
        shell: bash
      # Build
      - name: Build
        run: |
          ./make.sh ci
        shell: bash
      # Git Status
      - name: git status
        if: ${{ inputs.update-deps != true }}
        run: |
          GIT_STATUS="$(git status --porcelain)"
          if [ -n "$GIT_STATUS" ] ; then
            echo Error: Build process modified files under version control!
            echo git status
            echo "$GIT_STATUS"
            echo git diff
            git diff
            exit 1
          fi
        shell: bash
      # Cache save
      - name: Cache save
        uses: actions/cache/save@v4
        with:
          path: ${{ env.XDG_CACHE_HOME }}
          key: linux-${{ inputs.GOARCH }}-${{ hashFiles('**/go.sum', '**/*.go') }}
      # Gzip
      - name: Gzip
        run: gzip resonance.linux.${{ inputs.GOARCH }}
        shell: bash
      # Upload
      - uses: actions/upload-artifact@v4
        if: ${{ inputs.upload-artifact == true }}
        with:
          name: resonance.linux.${{ inputs.GOARCH }}.gz
          path: resonance.linux.${{ inputs.GOARCH }}.gz
          if-no-files-found: error
      # Coveralls
      - name: Coveralls
        if: ${{ inputs.coveralls == true }}
        uses: coverallsapp/github-action@v2.3.4
        with:
          file: cover.lcov
          flag-name: linux.${{ inputs.GOARCH }}
          parallel: true
          allow-empty: true
          coverage-reporter-platform: ${{ inputs.GOARCH == '386' || inputs.GOARCH == 'amd64' && 'x86_64' || inputs.GOARCH == 'arm64' && 'arm64' }}
      # Clean
      - name: Clean
        run: ./make.sh clean
        shell: bash
      # Git ls-files --others
      - name: git ls-files --others
        run: |
          GIT_LS_FILES_OTHERS="$(git ls-files --others)"
          if [ -n "$GIT_LS_FILES_OTHERS" ] ; then
            echo Error: make clean left files behind!
            echo git ls-files --others
            echo "$GIT_LS_FILES_OTHERS"
            exit 1
          fi
        shell: bash
      # find $XDG_CACHE_HOME
      - name: find $XDG_CACHE_HOME
        run: |
          FIND_XDG_CACHE_HOME="$(find "$XDG_CACHE_HOME" ! -type d)"
          if [ -n "$FIND_XDG_CACHE_HOME" ] ; then
            echo Error: make clean left files behind at $XDG_CACHE_HOME!
            echo "find $XDG_CACHE_HOME ! -type d"
            echo "$FIND_XDG_CACHE_HOME"
            exit 1
          fi
        shell: bash
      # Create Pull Request
      - name: Create Pull Request
        if: ${{ inputs.update-deps == true }}
        uses: peter-evans/create-pull-request@v6.1.0
        with:
          commit-message: Update dependencies
          title: Update dependencies
          body: |
            This PR was auto generated by a [GitHub Action](https://github.com/fornellas/resonance/actions/workflows/update_deps.yaml) to update project dependencies.

            If the build passes, this PR should be safe to merge.
