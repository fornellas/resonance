name: build-darwin
on:
  workflow_call:
    inputs:
      upload-artifact:
        required: false
        type: boolean
        default: false
      GOARCH:
        required: true
        type: string
      runs-on:
        required: true
        type: string
    outputs:
      artifact:
        value: resonance.darwin.${{ inputs.GOARCH }}.gz
jobs:
  build:
    runs-on: ${{ inputs.runs-on }}
    env:
        GOOS: darwin
        GOARCH: ${{ inputs.GOARCH }}
        XDG_CACHE_HOME: /tmp/XDG_CACHE_HOME
        GO_TEST_BINARY_FLAGS_EXTRA: -v
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4
      # Setup Go
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      # Make
      - name: Setup Make
        run: brew install make
        shell: bash
      # Cache restore
      - name: Cache restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.XDG_CACHE_HOME }}
          key: darwin-${{ inputs.GOARCH }}-${{ hashFiles('**/go.sum', '**/*.go') }}
          restore-keys: darwin-${{ inputs.GOARCH }}-
      # Build
      - name: Build
        run: |
          gmake ci
        shell: bash
      # Git Status
      - name: git status
        run: |
          GIT_STATUS="$(git status --porcelain)"
          if [ -n "$GIT_STATUS" ] ; then
            echo Error: Build process modified files under version control!
            echo git status
            echo "$GIT_STATUS"
            echo git diff
            git diff
            exit 1
          fi
        shell: bash
      # Cache save
      - name: Cache save
        uses: actions/cache/save@v4
        with:
          path: ${{ env.XDG_CACHE_HOME }}
          key: darwin-${{ inputs.GOARCH }}-${{ hashFiles('**/go.sum', '**/*.go') }}
      # Gzip
      - name: Gzip
        run: gzip resonance.darwin.${{ inputs.GOARCH }}
        shell: bash
      # Upload
      - uses: actions/upload-artifact@v4
        if: ${{ inputs.upload-artifact == true }}
        with:
          name: resonance.darwin.${{ inputs.GOARCH }}.gz
          path: resonance.darwin.${{ inputs.GOARCH }}.gz
          if-no-files-found: error
      # Coveralls
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          file: cover.lcov
          flag-name: darwin.${{ inputs.GOARCH }}
          parallel: true
          allow-empty: true
      # Clean
      - name: Clean
        run: gmake clean
        shell: bash
      # Git ls-files --others
      - name: git ls-files --others
        run: |
          GIT_LS_FILES_OTHERS="$(git ls-files --others)"
          if [ -n "$GIT_LS_FILES_OTHERS" ] ; then
            echo Error: Build clean left files behind!
            echo git ls-files --others
            echo "$GIT_LS_FILES_OTHERS"
            exit 1
          fi
        shell: bash